spring:
  profiles:
    active: production
  application:
    name: libraryapi
  datasource:
    url: ${DATASOURCE_URL:jdbc:postgresql://localhost:5432/library} # Procura a variável de ambiente DATASOURCE_URL, caso não encontre, usa o valor padrão jdbc:postgresql://localhost:5432/library
    username: ${DATASOURCE_USERNAME:postgres} # Procura a variável de ambiente DATASOURCE_USERNAME, caso não encontre, usa o valor padrão postgres
    password: ${DATASOURCE_PASSWORD:12345} # Procura a variável de ambiente DATASOURCE_PASSWORD, caso não encontre, usa o valor padrão 12345 ou postgres
    driver-class-name: org.postgresql.Driver
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
    #      ddl-auto: update
    ddl-auto: none
  security:
    oauth2:
      client:
        registration:
          google:
            client-id: ${GOOGLE_CLIENT_ID}
            client-secret: ${GOOGLE_CLIENT_SECRET}
  output:
    ansi:
      enabled: ALWAYS

logging:
  pattern:
    console: '%clr(%d{dd-MM-yyyy HH:mm:ss}){faint} %clr(%5p) %clr([%t]){faint} %clr(%-40.40logger){cyan} %clr(:){yellow} %m%n'
  file:
    name: logs/libraryapi.log
  level:
    io.github.eduardoconceicao90: TRACE
    root: WARN
    org:
      hibernate: INFO
      springframework:
        web: DEBUG
        security: TRACE

management:
  endpoints:
    web:
      exposure:
        include: "*"
  server:
    port: 9090

springdoc:
  override-with-generic-response: false

# production
---
spring:
  jpa:
    properties:
      hibernate:
        show_sql: true
        format_sql: true

# development
---
spring:
  jpa:
    properties:
      hibernate:
        show_sql: false
        format_sql: false